<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<OAuthV2 name="OAuthV2-Generate-Access-Token" continueOnError="false">
  <Operation>GenerateAccessToken</Operation>
  <!--
      ExpiresIn, in milliseconds. The ref is optional. The explicitly specified
      value is the default, when the variable reference cannot be resolved.
      600000 = 10 minutes
      900000 = 15 minutes

      This is set according to the expiry on the JWT access_token.
  -->
  <ExpiresIn ref="desired_apigee_token_lifetime">898000</ExpiresIn>
  <SupportedGrantTypes>
    <GrantType>client_credentials</GrantType>
  </SupportedGrantTypes>
  <!--
  <Scope>request.formparam.scope</Scope>
  -->
  <!--
      These attributes get associated to the token.
      They will be available to the api proxy whenever the token is
      subsequently validated.
  -->
  <Attributes>
    <!-- If display=false, the attribute won't be delivered in the auth code response. -->
    <Attribute name="idp_id_token" ref="idp_response.id_token" display="false"/>
    <Attribute name="idp_refresh_token" ref="idp_response.refresh_token" display="false"/>
    <Attribute name="idp_access_token" ref="idp_response.access_token" display="false"/>
    <Attribute name="original_client_ip" ref="client.ip" display="false"/>
    <!-- At time of verify, these attributes will be populated into variables. -->
  </Attributes>
  <RFCCompliantRequestResponse>true</RFCCompliantRequestResponse>
  <GenerateResponse enabled="false"/>
  <!--
  NO NO NO - this apparently is no longer true. Maybe see b/115735130

  Variables set by this policy when GenerateResponse.enabled = false:
    apigee.developer.id
    apigee.developer.app.name
    apigee.developer.email
    apigee.client_id
    apigee.access_token
    oauthV2.failed        (always false)
  -->
</OAuthV2>
