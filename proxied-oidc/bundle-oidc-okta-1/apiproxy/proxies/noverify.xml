<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="noverify">
  <Description>echo with no verification</Description>
  <HTTPProxyConnection>
    <BasePath>/oidc-okta-1/noverify</BasePath>
    <Properties/>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>
  <FaultRules>
    <FaultRule name="invalid-access-token">
      <Step>
        <Name>RF-Unauthorized</Name>
      </Step>
      <Condition>(fault.name = "InvalidAccessToken") OR (fault.name = "invalid_access_token")</Condition>
    </FaultRule>
    <FaultRule name="access_token_expired">
      <Step>
        <Name>RF-Unauthorized</Name>
      </Step>
      <Condition>fault.name = "access_token_expired"</Condition>
    </FaultRule>
  </FaultRules>
  <DefaultFaultRule name="fault-rule">
    <AlwaysEnforce>true</AlwaysEnforce>
    <Step>
      <Name>AM-Inject-Proxy-Revision-Header</Name>
    </Step>
  </DefaultFaultRule>
  <PreFlow name="PreFlow">
    <Request>
      <Step>
        <Name>CORS-1</Name>
      </Step>
      <Step>
        <Name>AM-Basics</Name>
      </Step>
      <Step>
        <Name>AM-Settings</Name>
      </Step>
      <Step>
        <Name>OAuthV2-VerifyAccessToken-Continue</Name>
      </Step>
      <Step>
        <Name>OAuthV2-GetTokenAttributes</Name>
      </Step>
      <Step>
        <Name>AM-Diagnostics</Name>
      </Step>
      <Step>
        <Name>RF-Unauthorized</Name>
        <Condition>(fault.name != null) AND (fault.name != "access_token_expired")</Condition>
      </Step>
    </Request>
    <Response>
      <Step>
        <Name>AM-Inject-Proxy-Revision-Header</Name>
      </Step>
      <Step>
        <Name>AM-Clean-Request-Headers-From-Response</Name>
      </Step>
    </Response>
  </PreFlow>
  <PostFlow name="PostFlow">
    <Request>
    </Request>
    <Response/>
  </PostFlow>
  <PostClientFlow name="PostFlow">
    <Request>
    </Request>
    <Response>
    </Response>
  </PostClientFlow>
  <Flows>
    <Flow name="echo-get">
      <Condition>(proxy.pathsuffix MatchesPath "/get") and (request.verb = "GET")</Condition>
      <Request>
      </Request>
      <Response>
      </Response>
    </Flow>
    <Flow name="unknown request">
      <Request>
        <Step>
          <Name>RF-Unknown-Request</Name>
        </Step>
      </Request>
      <Response>
      </Response>
    </Flow>
  </Flows>
  <RouteRule name="mainroute">
    <TargetEndpoint>echo</TargetEndpoint>
  </RouteRule>
</ProxyEndpoint>
